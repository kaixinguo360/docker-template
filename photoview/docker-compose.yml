version: "3.8"

x-logging: &loki-logging
    driver: loki
    options:
      loki-url: "${DEPLOY_LOKI_URL}"
      loki-retries: 5
      loki-batch-size: 400

services:
  web:
    image: ${DEPLOY_IMAGE_WEB:-viktorstrate/photoview:1}
#:log |    logging: *loki-logging
#:env |    env_file: ${DEPLOY_ENV_WEB}
#:port|    ports:
#:port|      - ${DEPLOY_PORT_WEB:-80}:80
    environment:
      - MYSQL_URL=photoview:photoview_password@tcp(db)/photoview
      - API_LISTEN_IP=web
      - API_LISTEN_PORT=80
      - PHOTO_CACHE=/app/cache
      - PUBLIC_ENDPOINT=https://${DEPLOY_SUBDOMAIN:-photoview}.${DEPLOY_HOSTNAME}/
      # Optional: To enable map related features, you need to create a mapbox token.
      # A token can be generated for free here https://account.mapbox.com/access-tokens/
      # It's a good idea to limit the scope of the token to your own domain, to prevent others from using it.
      # - MAPBOX_TOKEN=<YOUR TOKEN HERE>
    depends_on:
      - db
    networks:
      - external_network
      - internal_network
    volumes:
      - apicache:/app/cache
      - images:/media/images
#:rclone|      - rclone:$DEPLOY_RCLONE_MOUNT
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_WEB:-node.labels.ignore != true}
      labels:
        - "traefik.enable=true" #!no-proxy
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-photoview}.rule=Host(`${DEPLOY_SUBDOMAIN:-photoview}.${DEPLOY_HOSTNAME}`)"
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-photoview}.entrypoints=webhttps"
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-photoview}.tls.certresolver=le"
        - "traefik.http.services.${DEPLOY_STACK_NAME:-photoview}.loadbalancer.server.port=80"

  db:
    image: ${DEPLOY_IMAGE_DB:-mariadb:10.5}
    environment:
      - MYSQL_DATABASE=photoview
      - MYSQL_USER=photoview
      - MYSQL_PASSWORD=photoview_password
      - MYSQL_ROOT_PASSWORD=photoview_root_password
    networks:
      - internal_network
    volumes:
      - db:/var/lib/mysql
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_DB:-node.labels.ignore != true}

networks:
  external_network:
    external: true
  internal_network:
    internal: true

volumes:
  db:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw"
      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-photoview}/db"
  apicache:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw"
      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-photoview}/apicache"
  images: #!media_image
    driver_opts: #!media_image
      type: "nfs" #!media_image
      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw" #!media_image
      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-photoview}/images" #!media_image
#:media_image|  images:
#:media_image|    driver_opts:
#:media_image|      type: "nfs"
#:media_image|      o: "addr=$DEPLOY_MEDIA_IMAGE_HOST,nolock,soft,rw"
#:media_image|      device: ":$DEPLOY_MEDIA_IMAGE_ROOTT"
#:rclone|  rclone:
#:rclone|    driver: "rclone"
#:rclone|    driver_opts:
#:rclone|      remote: "$DEPLOY_RCLONE_REMOTE"
