version: "3.8"

x-logging: &loki-logging
    driver: loki
    options:
      loki-url: "${DEPLOY_LOKI_URL}"
      loki-retries: 5
      loki-batch-size: 400

services:

#:hdfs|  # --------- #
#:hdfs|  # Name Node #
#:hdfs|  # --------- #
#:hdfs|  namenode:
#:hdfs|    image: ${DEPLOY_IMAGE_HDFS_NAMENODE:-bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8}
#:hdfs|#:log |    logging: *loki-logging
#:hdfs|#:port|    ports:
#:hdfs|#:port|      - ${DEPLOY_PORT_HDFS_NAMENODE:-9870}:9870
#:hdfs|    environment:
#:hdfs|      - CLUSTER_NAME=${CLUSTER_NAME:-test}
#:hdfs|    env_file:
#:hdfs|      - ${DEPLOY_CONFIG_HDFS:-config/hdfs.env}
#:hdfs|    networks:
#:hdfs|      - internal_network
#:hdfs|    volumes:
#:hdfs|      - namenode:/hadoop/dfs/name #!local-volume
#:hdfs|#:local-volume|      - ${DEPLOY_LOCAL_DATA_ROOT:?please set local volume location}/${DEPLOY_STACK_NAME:-hadoop}/namenode:/hadoop/dfs/name
#:hdfs|    deploy:
#:hdfs|      replicas: 1
#:hdfs|      endpoint_mode: dnsrr
#:hdfs|      placement:
#:hdfs|        constraints: 
#:hdfs|          - ${DEPLOY_NODE_HDFS_NAMENODE:-node.labels.ignore != true}
#:hdfs|
#:hdfs|  # --------------- #
#:hdfs|  # Name Node - Web #
#:hdfs|  # --------------- #
#:hdfs|  namenode-web: #!no-proxy
#:hdfs|    image: alpine/socat:latest #!no-proxy
#:hdfs|    command: tcp-listen:9870,fork tcp:namenode:9870 #!no-proxy
#:hdfs|    networks: #!no-proxy
#:hdfs|      - external_network #!no-proxy
#:hdfs|      - internal_network #!no-proxy
#:hdfs|    deploy: #!no-proxy
#:hdfs|      replicas: 1 #!no-proxy
#:hdfs|      placement: #!no-proxy
#:hdfs|        constraints:  #!no-proxy
#:hdfs|          - ${DEPLOY_NODE_HDFS_NAMENODE:-node.labels.ignore != true} #!no-proxy
#:hdfs|      labels: #!no-proxy
#:hdfs|        - "traefik.enable=true" #!no-proxy
#:hdfs|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_namenode.rule=${DEPLOY_ROUTER_HDFS_NAMENODE:-Host(\`${DEPLOY_SUBDOMAIN_HDFS_NAMENODE:-namenode-hadoop}.${DEPLOY_HOSTNAME}\`)}" #!no-proxy
#:hdfs|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_namenode.entrypoints=webhttps" #!no-proxy
#:hdfs|#:client-ssl|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_namenode.tls.options=sslVerifyClient@file" #!no-proxy
#:hdfs|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_namenode.tls.certresolver=le" #!no-proxy
#:hdfs|        - "traefik.http.services.${DEPLOY_STACK_NAME:-hadoop}_namenode.loadbalancer.server.port=9870" #!no-proxy
#:hdfs|
#:hdfs|  # --------- #
#:hdfs|  # Data Node #
#:hdfs|  # --------- #
#:hdfs|  datanode:
#:hdfs|    image: ${DEPLOY_IMAGE_HDFS_DATANODE:-bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8}
#:hdfs|#:log |    logging: *loki-logging
#:hdfs|#:port|    ports:
#:hdfs|#:port|      - target: 9864
#:hdfs|#:port|        published: ${DEPLOY_PORT_HDFS_DATANODE:-9864}
#:hdfs|#:port|        protocol: tcp
#:hdfs|#:port|        mode: host
#:hdfs|    hostname: "datanode.{{.Node.Hostname}}"
#:hdfs|    environment:
#:hdfs|      SERVICE_PRECONDITION: "namenode:9000"
#:hdfs|    env_file:
#:hdfs|      - ${DEPLOY_CONFIG_HDFS:-config/hdfs.env}
#:hdfs|    networks:
#:hdfs|      - internal_network
#:hdfs|    volumes:
#:hdfs|      - ${DEPLOY_LOCAL_DATA_ROOT:?please set local volume location}/${DEPLOY_STACK_NAME:-hadoop}/datanode:/hadoop/dfs/data
#:hdfs|    deploy:
#:hdfs|      mode: global
#:hdfs|      endpoint_mode: dnsrr
#:hdfs|      placement:
#:hdfs|        constraints: 
#:hdfs|          - ${DEPLOY_NODE_HDFS_DATANODE:-node.labels.ignore != true}

#:yarn|  # ---------------- #
#:yarn|  # Resource Manager #
#:yarn|  # ---------------- #
#:yarn|  resourcemanager:
#:yarn|    image: ${DEPLOY_IMAGE_YARN_RM:-bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8}
#:yarn|#:log |    logging: *loki-logging
#:yarn|#:port|    ports:
#:yarn|#:port|      - ${DEPLOY_PORT_YARN_RM:-8088}:8088
#:yarn|    healthcheck:
#:yarn|      disable: true
#:yarn|    environment:
#:yarn|        SERVICE_PRECONDITION: "namenode:9000 datanode:9864"
#:yarn|    env_file:
#:yarn|      - ${DEPLOY_CONFIG_HDFS:-config/hdfs.env}
#:yarn|      - ${DEPLOY_CONFIG_YARN:-config/yarn.env}
#:yarn|    networks:
#:yarn|      - internal_network
#:yarn|    deploy:
#:yarn|      replicas: 1
#:yarn|      endpoint_mode: dnsrr
#:yarn|      placement:
#:yarn|        constraints: 
#:yarn|          - ${DEPLOY_NODE_YARN_RM:-node.labels.ignore != true}
#:yarn|
#:yarn|  # ---------------------- #
#:yarn|  # Resource Manager - Web #
#:yarn|  # ---------------------- #
#:yarn|  resourcemanager-web: #!no-proxy
#:yarn|    image: alpine/socat:latest #!no-proxy
#:yarn|    command: tcp-listen:8088,fork tcp:resourcemanager:8088 #!no-proxy
#:yarn|    networks: #!no-proxy
#:yarn|      - external_network #!no-proxy
#:yarn|      - internal_network #!no-proxy
#:yarn|    deploy: #!no-proxy
#:yarn|      replicas: 1 #!no-proxy
#:yarn|      placement: #!no-proxy
#:yarn|        constraints:  #!no-proxy
#:yarn|          - ${DEPLOY_NODE_YARN_RM:-node.labels.ignore != true} #!no-proxy
#:yarn|      labels: #!no-proxy
#:yarn|        - "traefik.enable=true" #!no-proxy
#:yarn|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_resourcemanager.rule=${DEPLOY_ROUTER_YARN_RM:-Host(\`${DEPLOY_SUBDOMAIN_YARN_RM:-resourcemanager-hadoop}.${DEPLOY_HOSTNAME}\`)}" #!no-proxy
#:yarn|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_resourcemanager.entrypoints=webhttps" #!no-proxy
#:yarn|#:client-ssl|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_resourcemanager.tls.options=sslVerifyClient@file" #!no-proxy
#:yarn|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_resourcemanager.tls.certresolver=le" #!no-proxy
#:yarn|        - "traefik.http.services.${DEPLOY_STACK_NAME:-hadoop}_resourcemanager.loadbalancer.server.port=8088" #!no-proxy
#:yarn|
#:yarn|  # ------------ #
#:yarn|  # Node Manager #
#:yarn|  # ------------ #
#:yarn|  nodemanager:
#:yarn|    image: ${DEPLOY_IMAGE_YARN_NM:-bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8}
#:yarn|#:log |    logging: *loki-logging
#:yarn|#:port|    ports:
#:yarn|#:port|      - target: 8042
#:yarn|#:port|        published: ${DEPLOY_PORT_YARN_NM:-8042}
#:yarn|#:port|        protocol: tcp
#:yarn|#:port|        mode: host
#:yarn|    healthcheck:
#:yarn|      disable: true
#:yarn|    hostname: "nodemanager.{{.Node.Hostname}}"
#:yarn|    environment:
#:yarn|        SERVICE_PRECONDITION: "namenode:9000 datanode:9864 resourcemanager:8088"
#:yarn|    env_file:
#:yarn|      - ${DEPLOY_CONFIG_HDFS:-config/hdfs.env}
#:yarn|      - ${DEPLOY_CONFIG_YARN:-config/yarn.env}
#:yarn|    networks:
#:yarn|      - internal_network
#:yarn|    deploy:
#:yarn|      mode: global
#:yarn|      endpoint_mode: dnsrr
#:yarn|      placement:
#:yarn|        constraints: 
#:yarn|          - ${DEPLOY_NODE_YARN_NM:-node.labels.ignore != true}
#:yarn|
#:yarn|  # -------------- #
#:yarn|  # History Server #
#:yarn|  # -------------- #
#:yarn|  historyserver:
#:yarn|    image: ${DEPLOY_IMAGE_YARN_HS:-bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8}
#:yarn|#:log |    logging: *loki-logging
#:yarn|#:port|    ports:
#:yarn|#:port|      - ${DEPLOY_PORT_YARN_HS:-8188}:8188
#:yarn|    healthcheck:
#:yarn|      disable: true
#:yarn|    environment:
#:yarn|        SERVICE_PRECONDITION: "namenode:9000 datanode:9864 resourcemanager:8088"
#:yarn|    env_file:
#:yarn|      - ${DEPLOY_CONFIG_HDFS:-config/hdfs.env}
#:yarn|      - ${DEPLOY_CONFIG_YARN:-config/yarn.env}
#:yarn|    volumes:
#:yarn|      - historyserver:/hadoop/yarn/timeline #!local-volume
#:yarn|#:local-volume|      - ${DEPLOY_LOCAL_DATA_ROOT:?please set local volume location}/${DEPLOY_STACK_NAME:-hadoop}/historyserver:/hadoop/yarn/timeline
#:yarn|    networks:
#:yarn|      - internal_network
#:yarn|    deploy:
#:yarn|      replicas: 1
#:yarn|      endpoint_mode: dnsrr
#:yarn|      placement:
#:yarn|        constraints: 
#:yarn|          - ${DEPLOY_NODE_YARN_HS:-node.labels.ignore != true}
#:yarn|
#:yarn|  # -------------------- #
#:yarn|  # History Server - Web #
#:yarn|  # -------------------- #
#:yarn|  historyserver-web: #!no-proxy
#:yarn|    image: alpine/socat:latest #!no-proxy
#:yarn|    command: tcp-listen:8188,fork tcp:historyserver:8188 #!no-proxy
#:yarn|    networks: #!no-proxy
#:yarn|      - external_network #!no-proxy
#:yarn|      - internal_network #!no-proxy
#:yarn|    deploy: #!no-proxy
#:yarn|      replicas: 1 #!no-proxy
#:yarn|      placement: #!no-proxy
#:yarn|        constraints:  #!no-proxy
#:yarn|          - ${DEPLOY_NODE_YARN_HS:-node.labels.ignore != true} #!no-proxy
#:yarn|      labels: #!no-proxy
#:yarn|        - "traefik.enable=true" #!no-proxy
#:yarn|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_historyserver.rule=${DEPLOY_ROUTER_YARN_HS:-Host(\`${DEPLOY_SUBDOMAIN_YARN_HS:-historyserver-hadoop}.${DEPLOY_HOSTNAME}\`)}" #!no-proxy
#:yarn|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_historyserver.entrypoints=webhttps" #!no-proxy
#:yarn|#:client-ssl|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_historyserver.tls.options=sslVerifyClient@file" #!no-proxy
#:yarn|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_historyserver.tls.certresolver=le" #!no-proxy
#:yarn|        - "traefik.http.services.${DEPLOY_STACK_NAME:-hadoop}_historyserver.loadbalancer.server.port=8188" #!no-proxy

#:hive|  # ---- #
#:hive|  # Hive #
#:hive|  # ---- #
#:hive|  hive:
#:hive|    image: ${DEPLOY_IMAGE_HIVE:-bde2020/hive:2.3.2-postgresql-metastore}
#:hive|#:port|    ports:
#:hive|#:port|      - ${DEPLOY_PORT_HIVE:-10000}:10000
#:hive|    env_file:
#:hive|      - ${DEPLOY_CONFIG_HDFS:-config/hdfs.env}
#:hive|      - ${DEPLOY_CONFIG_YARN:-config/yarn.env}
#:hive|      - ${DEPLOY_CONFIG_HIVE:-config/hive.env}
#:hive|    environment:
#:hive|      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
#:hive|      SERVICE_PRECONDITION: "hive-metastore:9083"
#:hive|    networks:
#:hive|      - internal_network
#:hive|    deploy:
#:hive|      replicas: 1
#:hive|      endpoint_mode: dnsrr
#:hive|      placement:
#:hive|        constraints: 
#:hive|          - ${DEPLOY_NODE_HIVE:-node.labels.ignore != true}
#:hive|
#:hive|  # -------------- #
#:hive|  # Hive Metastore #
#:hive|  # -------------- #
#:hive|  hive-metastore:
#:hive|    image: ${DEPLOY_IMAGE_HIVE_METASTORE:-bde2020/hive:2.3.2-postgresql-metastore}
#:hive|#:port|    ports:
#:hive|#:port|      - ${DEPLOY_PORT_HIVE_METASTORE:-9083}:9083
#:hive|    env_file:
#:hive|      - ${DEPLOY_CONFIG_HDFS:-config/hdfs.env}
#:hive|      - ${DEPLOY_CONFIG_YARN:-config/yarn.env}
#:hive|      - ${DEPLOY_CONFIG_HIVE:-config/hive.env}
#:hive|    command: /opt/hive/bin/hive --service metastore
#:hive|    environment:
#:hive|      SERVICE_PRECONDITION: "namenode:9000 datanode:9864 hive-metastore-postgresql:5432"
#:hive|    networks:
#:hive|      - internal_network
#:hive|    deploy:
#:hive|      replicas: 1
#:hive|      endpoint_mode: dnsrr
#:hive|      placement:
#:hive|        constraints: 
#:hive|          - ${DEPLOY_NODE_HIVE_METASTORE:-node.labels.ignore != true}
#:hive|
#:hive|  # ------------------------- #
#:hive|  # Hive Metastore PostgreSQL #
#:hive|  # ------------------------- #
#:hive|  hive-metastore-postgresql:
#:hive|    image: ${DEPLOY_IMAGE_HIVE_METASTORE_POSTGRESQL:-bde2020/hive-metastore-postgresql:2.3.0}
#:hive|    networks:
#:hive|      - internal_network
#:hive|    volumes:
#:hive|      - hive:/var/lib/postgresql/data #!local-volume
#:hive|#:local-volume|      - ${DEPLOY_LOCAL_DATA_ROOT:?please set local volume location}/${DEPLOY_STACK_NAME:-hadoop}/hive:/var/lib/postgresql/data
#:hive|    deploy:
#:hive|      replicas: 1
#:hive|      endpoint_mode: dnsrr
#:hive|      placement:
#:hive|        constraints: 
#:hive|          - ${DEPLOY_NODE_HIVE_METASTORE:-node.labels.ignore != true}

#:hbase|  # --------- #
#:hbase|  # ZooKeeper #
#:hbase|  # --------- #
#:hbase|  zookeeper:
#:hbase|    image: ${DEPLOY_IMAGE_HBASE_ZK:-zookeeper:3.4.10}
#:hbase|#:port|    ports:
#:hbase|#:port|      - ${DEPLOY_PORT_HBASE_ZK:-2181}:2181
#:hbase|    environment:
#:hbase|      ZOO_MY_ID: 1
#:hbase|      ZOO_SERVERS: "server.1=0.0.0.0:2888:3888"
#:hbase|    networks:
#:hbase|      - internal_network
#:hbase|    deploy:
#:hbase|      replicas: 1
#:hbase|      endpoint_mode: dnsrr
#:hbase|      placement:
#:hbase|        constraints: 
#:hbase|          - ${DEPLOY_NODE_HBASE_ZK:-node.labels.ignore != true}
#:hbase|
#:hbase|  # ------------ #
#:hbase|  # HBase Master #
#:hbase|  # ------------ #
#:hbase|  hbase-master:
#:hbase|    image: ${DEPLOY_IMAGE_HBASE_MASTER:-bde2020/hbase-master:1.0.0-hbase1.2.6}
#:hbase|#:port|    ports:
#:hbase|#:port|      - ${DEPLOY_PORT_HBASE_MASTER:-16010}:16010
#:hbase|    env_file:
#:hbase|      - ${DEPLOY_CONFIG_HDFS:-config/hdfs.env}
#:hbase|      - ${DEPLOY_CONFIG_YARN:-config/yarn.env}
#:hbase|      - ${DEPLOY_CONFIG_HBASE:-config/hbase.env}
#:hbase|    environment:
#:hbase|      SERVICE_PRECONDITION: "namenode:9000 datanode:9864 zookeeper:2181"
#:hbase|    networks:
#:hbase|      - internal_network
#:hbase|    deploy:
#:hbase|      replicas: 1
#:hbase|      endpoint_mode: dnsrr
#:hbase|      placement:
#:hbase|        constraints: 
#:hbase|          - ${DEPLOY_NODE_HBASE_MASTER:-node.labels.ignore != true}
#:hbase|
#:hbase|  # ------------------ #
#:hbase|  # HBase Master - Web #
#:hbase|  # ------------------ #
#:hbase|  hbase-master-web: #!no-proxy
#:hbase|    image: alpine/socat:latest #!no-proxy
#:hbase|    command: tcp-listen:16010,fork tcp:hbase-master:16010 #!no-proxy
#:hbase|    networks: #!no-proxy
#:hbase|      - external_network #!no-proxy
#:hbase|      - internal_network #!no-proxy
#:hbase|    deploy: #!no-proxy
#:hbase|      replicas: 1 #!no-proxy
#:hbase|      placement: #!no-proxy
#:hbase|        constraints:  #!no-proxy
#:hbase|          - ${DEPLOY_NODE_HBASE_MASTER:-node.labels.ignore != true} #!no-proxy
#:hbase|      labels: #!no-proxy
#:hbase|        - "traefik.enable=true" #!no-proxy
#:hbase|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_hbase-master.rule=${DEPLOY_ROUTER_HBASE:-Host(\`${DEPLOY_SUBDOMAIN_HBASE:-hbase-hadoop}.${DEPLOY_HOSTNAME}\`)}" #!no-proxy
#:hbase|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_hbase-master.entrypoints=webhttps" #!no-proxy
#:hbase|#:client-ssl|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_hbase-master.tls.options=sslVerifyClient@file" #!no-proxy
#:hbase|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_hbase-master.tls.certresolver=le" #!no-proxy
#:hbase|        - "traefik.http.services.${DEPLOY_STACK_NAME:-hadoop}_hbase-master.loadbalancer.server.port=16010" #!no-proxy
#:hbase|
#:hbase|  # ------------ #
#:hbase|  # HBase Region #
#:hbase|  # ------------ #
#:hbase|  hbase-region:
#:hbase|    image: ${DEPLOY_IMAGE_HBASE_REGION:-bde2020/hbase-regionserver:1.0.0-hbase1.2.6}
#:hbase|    hostname: "hbase-region.{{.Node.Hostname}}"
#:hbase|#:port|    ports:
#:hbase|#:port|      - target: 16030
#:hbase|#:port|        published: ${DEPLOY_PORT_HBASE_REGION:-16030}
#:hbase|#:port|        protocol: tcp
#:hbase|#:port|        mode: host
#:hbase|    env_file:
#:hbase|      - ${DEPLOY_CONFIG_HDFS:-config/hdfs.env}
#:hbase|      - ${DEPLOY_CONFIG_YARN:-config/yarn.env}
#:hbase|      - ${DEPLOY_CONFIG_HBASE:-config/hbase.env}
#:hbase|    environment:
#:hbase|      HBASE_CONF_hbase_regionserver_hostname: "hbase-region.{{.Node.Hostname}}"
#:hbase|      SERVICE_PRECONDITION: "namenode:9000 datanode:9864 zookeeper:2181 hbase-master:16010"
#:hbase|    networks:
#:hbase|      - internal_network
#:hbase|    deploy:
#:hbase|      mode: global
#:hbase|      endpoint_mode: dnsrr
#:hbase|      placement:
#:hbase|        constraints: 
#:hbase|          - ${DEPLOY_NODE_HBASE_REGION:-node.labels.ignore != true}

# Reference Project: big-data-europe
# GitHub:
#   - https://github.com/big-data-europe/docker-hadoop
#   - https://github.com/big-data-europe/docker-hive
# DockerHub:
#   - https://hub.docker.com/r/bde2020/hadoop-namenode
#   - https://hub.docker.com/r/bde2020/hive
# Reference docker-compose Config:
#   - https://github.com/big-data-europe/docker-hadoop/blob/master/docker-compose-v3.yml
#   - https://github.com/big-data-europe/docker-hive/blob/master/docker-compose.yml

networks:
  internal_network:
    internal: true
    attachable: true
  external_network:
    external: true

volumes: #!local-volume
#:hdfs|  namenode: #!local-volume
#:hdfs|    driver_opts: #!local-volume
#:hdfs|      type: "nfs" #!local-volume
#:hdfs|      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw" #!local-volume
#:hdfs|      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-hadoop}/namenode" #!local-volume
#:yarn|  historyserver: #!local-volume
#:yarn|    driver_opts: #!local-volume
#:yarn|      type: "nfs" #!local-volume
#:yarn|      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw" #!local-volume
#:yarn|      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-hadoop}/historyserver" #!local-volume
#:hive|  hive: #!local-volume
#:hive|    driver_opts: #!local-volume
#:hive|      type: "nfs" #!local-volume
#:hive|      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw" #!local-volume
#:hive|      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-hadoop}/hive" #!local-volume
