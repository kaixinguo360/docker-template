version: "3.8"

x-logging: &loki-logging
    driver: loki
    options:
      loki-url: "${DEPLOY_LOKI_URL}"
      loki-retries: 5
      loki-batch-size: 400

services:
  proxy:
    image: ${DEPLOY_IMAGE_PROXY:-traefik:v2.11}
#:log |    logging: *loki-logging
#:env |    env_file: ${DEPLOY_ENV_PROXY}
    command:
      - "--configFile=/config/traefik.yml"
      # 关闭匿名数据收集
      - "--global.sendanonymoususage=false"
      - "--global.checknewversion=false"
    ports:
      - target: 80
        published: ${DEPLOY_PORT_HTTP:-80}
        protocol: tcp
        mode: host
      - target: 443
        published: ${DEPLOY_PORT_HTTPS:-443}
        protocol: tcp
        mode: host
    volumes:
      - data:/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    configs:
      - source: traefik-config
        target: /config/traefik.yml
      - source: dynamic-config
        target: /config/dynamic.yml
    networks:
      - external_network
    deploy:
      placement:
        constraints:
          - ${DEPLOY_NODE_PROXY:-node.labels.ignore != true}
      labels:
        - "traefik.enable=true"
        # 全局重定向匹配路由规则，这里匹配了所有路由
        - "traefik.http.routers.http2https.rule=HostRegexp(\`{any:.+}\`)"
        # 入口点选择上面配置的webhttp入口点
        - "traefik.http.routers.http2https.entrypoints=webhttp"
        # 路由中间件
        - "traefik.http.routers.http2https.middlewares=https-redirect"
        - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
        - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
        # 最最关键的一步，创建一个noop虚服务的loadbalancer，port随便选，不然上述重定向配置不会生效
        - "traefik.http.services.noop.loadbalancer.server.port=9999"
#:dashboard|        # 仪表盘
#:dashboard|        - "traefik.http.routers.api.rule=${DEPLOY_ROUTER_DASHBOARD:-Host(\`${DEPLOY_SUBDOMAIN:-traefik}.${DEPLOY_HOSTNAME}\`)}"
#:dashboard|        - "traefik.http.routers.api.entrypoints=webhttps"
#:dashboard|#:client-ssl|        - "traefik.http.routers.api.tls.options=sslVerifyClient@file"
#:dashboard|        - "traefik.http.routers.api.tls.certresolver=le"
#:dashboard|        - "traefik.http.routers.api.service=api@internal"

networks:
  external_network:
    external: true

configs:
  traefik-config:
    file: ${DEPLOY_CONFIG_TRAEFIK:-config/traefik.yml}
  dynamic-config:
    file: ${DEPLOY_CONFIG_TRAEFIK_DYNAMIC:-config/dynamic.yml}

volumes:
  data:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw"
      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-traefik}/data"
  config:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw"
      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-traefik}/config"
