version: "3.8"

x-logging: &loki-logging
    driver: loki
    options:
      loki-url: "${DEPLOY_LOKI_URL}"
      loki-retries: 5
      loki-batch-size: 400

services:
  web:
    image: ${DEPLOY_IMAGE_WEB:-rocketchat/rocket.chat:3.17.0}
#:log |    logging: *loki-logging
#:env |    env_file: ${DEPLOY_ENV_WEB}
#:port|    ports:
#:port|      - ${DEPLOY_PORT_WEB:-3000}:3000
    command: >
      bash -c
        "for i in \`seq 1 30\`; do
          node main.js &&
          s=\$? && break || s=\$?;
          echo \"Tried \$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit \$s)"
    environment:
      PORT: "3000"
      ROOT_URL: https://${DEPLOY_SUBDOMAIN:-rocket}.${DEPLOY_HOSTNAME}
      MONGO_URL: mongodb://db:27017/rocketchat
      MONGO_OPLOG_URL: mongodb://db:27017/local
#      MAIL_URL: smtp://smtp.email
#      HTTP_PROXY: http://proxy.domain.com
#      HTTPS_PROXY: http://proxy.domain.com
    depends_on:
      - db
    networks:
      - internal_network
      - external_network
    volumes:
      - data:/app/uploads
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_WEB:-node.labels.ignore != true}
      labels:
        - "traefik.enable=true" #!no-proxy
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-rocket}.rule=Host(\`${DEPLOY_SUBDOMAIN:-rocket}.${DEPLOY_HOSTNAME}\`)"
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-rocket}.entrypoints=webhttps"
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-rocket}.tls.certresolver=le"
        - "traefik.http.services.${DEPLOY_STACK_NAME:-rocket}.loadbalancer.server.port=3000"

  db:
    image: ${DEPLOY_IMAGE_DB:-mongo:4.0}
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
    networks:
      - internal_network
    volumes:
     - db:/data/db
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_DB:-node.labels.ignore != true}

networks:
  internal_network:
    internal: true
    attachable: true
  external_network:
    external: true

volumes:
  data:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw"
      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-rocket}/data"
  db:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw"
      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-rocket}/db"
